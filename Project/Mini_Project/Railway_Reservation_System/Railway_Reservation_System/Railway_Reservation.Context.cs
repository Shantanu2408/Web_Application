//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Railway_Reservation_System
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Railway_ReservationEntities7 : DbContext
    {
        public Railway_ReservationEntities7()
            : base("name=Railway_ReservationEntities7")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin_Detail> Admin_Detail { get; set; }
        public virtual DbSet<Book_Ticket> Book_Ticket { get; set; }
        public virtual DbSet<Cancel_Ticket> Cancel_Ticket { get; set; }
        public virtual DbSet<Trains_Detail> Trains_Detail { get; set; }
        public virtual DbSet<user_details> user_details { get; set; }
        public virtual DbSet<Fair_S> Fair_S { get; set; }
        public virtual DbSet<Seat_Availability> Seat_Availability { get; set; }
    
        public virtual int setseatavl(Nullable<int> trainid, string @class)
        {
            var trainidParameter = trainid.HasValue ?
                new ObjectParameter("trainid", trainid) :
                new ObjectParameter("trainid", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setseatavl", trainidParameter, classParameter);
        }
    
        public virtual int setseatavl1(Nullable<int> trainid, string @class)
        {
            var trainidParameter = trainid.HasValue ?
                new ObjectParameter("trainid", trainid) :
                new ObjectParameter("trainid", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setseatavl1", trainidParameter, classParameter);
        }
    
        public virtual int Add_Seat(Nullable<decimal> trainid, Nullable<int> fac, Nullable<int> sac, Nullable<int> tac)
        {
            var trainidParameter = trainid.HasValue ?
                new ObjectParameter("trainid", trainid) :
                new ObjectParameter("trainid", typeof(decimal));
    
            var facParameter = fac.HasValue ?
                new ObjectParameter("fac", fac) :
                new ObjectParameter("fac", typeof(int));
    
            var sacParameter = sac.HasValue ?
                new ObjectParameter("sac", sac) :
                new ObjectParameter("sac", typeof(int));
    
            var tacParameter = tac.HasValue ?
                new ObjectParameter("tac", tac) :
                new ObjectParameter("tac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Seat", trainidParameter, facParameter, sacParameter, tacParameter);
        }
    
        public virtual int Add_Fair(Nullable<decimal> train_id, Nullable<int> facf, Nullable<int> sacf, Nullable<int> tacf)
        {
            var train_idParameter = train_id.HasValue ?
                new ObjectParameter("train_id", train_id) :
                new ObjectParameter("train_id", typeof(decimal));
    
            var facfParameter = facf.HasValue ?
                new ObjectParameter("facf", facf) :
                new ObjectParameter("facf", typeof(int));
    
            var sacfParameter = sacf.HasValue ?
                new ObjectParameter("sacf", sacf) :
                new ObjectParameter("sacf", typeof(int));
    
            var tacfParameter = tacf.HasValue ?
                new ObjectParameter("tacf", tacf) :
                new ObjectParameter("tacf", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Fair", train_idParameter, facfParameter, sacfParameter, tacfParameter);
        }
    }
}
